{
  "name": "three",
  "version": "0.77.1",
  "description": "JavaScript 3D library",
  "main": "build/three.js",
  "files": [
    "package.json",
    "LICENSE",
    "README.md",
    "build/three.js",
    "build/three.min.js",
    "src",
    "examples/js",
    "examples/fonts",
    "bower.json"
  ],
  "directories": {
    "doc": "docs",
    "example": "examples",
    "test": "test"
  },
  "scripts": {
    "build": "cd ./utils/build && node build.js --include common --include extras",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mrdoob/three.js"
  },
  "keywords": [
    "three",
    "three.js",
    "3d",
    "webgl"
  ],
  "author": {
    "name": "mrdoob"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mrdoob/three.js/issues"
  },
  "homepage": "http://threejs.org/",
  "devDependencies": {
    "argparse": "^1.0.3",
    "jscs": "^1.13.1",
    "uglify-js": "^2.6.0"
  },
  "readme": "three.js\r\n========\r\n\r\n#### JavaScript 3D library ####\r\n\r\nThe aim of the project is to create a lightweight 3D library with a very low level of complexity — in other words, for dummies. The library provides &lt;canvas&gt;, &lt;svg&gt;, CSS3D and WebGL renderers.\r\n\r\n[Examples](http://threejs.org/examples/) — [Documentation](http://threejs.org/docs/) — [Migrating](https://github.com/mrdoob/three.js/wiki/Migration) — [Help](http://stackoverflow.com/questions/tagged/three.js)\r\n\r\n\r\n### Usage ###\r\n\r\nDownload the [minified library](http://threejs.org/build/three.min.js) and include it in your html.\r\nAlternatively see [how to build the library yourself](https://github.com/mrdoob/three.js/wiki/build.py,-or-how-to-generate-a-compressed-Three.js-file).\r\n\r\n```html\r\n<script src=\"js/three.min.js\"></script>\r\n```\r\n\r\nThis code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a `WebGL` renderer for the scene and camera, and it adds that viewport to the document.body element. Finally it animates the cube within the scene for the camera.\r\n\r\n```javascript\r\nvar scene, camera, renderer;\r\nvar geometry, material, mesh;\r\n\r\ninit();\r\nanimate();\r\n\r\nfunction init() {\r\n\r\n\tscene = new THREE.Scene();\r\n\r\n\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\r\n\tcamera.position.z = 1000;\r\n\r\n\tgeometry = new THREE.BoxGeometry( 200, 200, 200 );\r\n\tmaterial = new THREE.MeshBasicMaterial( { color: 0xff0000, wireframe: true } );\r\n\r\n\tmesh = new THREE.Mesh( geometry, material );\r\n\tscene.add( mesh );\r\n\r\n\trenderer = new THREE.WebGLRenderer();\r\n\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\r\n\tdocument.body.appendChild( renderer.domElement );\r\n\r\n}\r\n\r\nfunction animate() {\r\n\r\n\trequestAnimationFrame( animate );\r\n\r\n\tmesh.rotation.x += 0.01;\r\n\tmesh.rotation.y += 0.02;\r\n\r\n\trenderer.render( scene, camera );\r\n\r\n}\r\n```\r\n\r\nIf everything went well you should see [this](http://jsfiddle.net/hfj7gm6t/).\r\n\r\n### Change log ###\r\n\r\n[releases](https://github.com/mrdoob/three.js/releases)\r\n",
  "readmeFilename": "README.md",
  "_id": "three@0.77.1",
  "dist": {
    "shasum": "72e316c385e9ad2effb6d2bf12086f3cb8435651"
  },
  "_from": "three@^0.77.1",
  "_resolved": "https://registry.npmjs.org/three/-/three-0.77.1.tgz"
}
