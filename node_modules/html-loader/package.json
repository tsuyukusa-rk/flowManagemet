{
  "name": "html-loader",
  "version": "0.4.3",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "description": "html loader module for webpack",
  "dependencies": {
    "es6-templates": "^0.2.2",
    "fastparse": "^1.0.0",
    "html-minifier": "^1.0.0",
    "loader-utils": "~0.2.2",
    "object-assign": "^4.0.1"
  },
  "devDependencies": {
    "mocha": "^2.3.4",
    "should": "^7.1.1"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:webpack/html-loader.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "readme": "# html loader for webpack\n\nExports HTML as string. HTML is minimized when the compiler demands.\n\nBy default every local `<img src=\"image.png\">` is required (`require(\"./image.png\")`). You may need to specify loaders for images in your configuration (recommended `file-loader` or `url-loader`).\n\nYou can specify which tag-attribute combination should be processed by this loader via the query parameter `attrs`. Pass an array or a space-separated list of `<tag>:<attribute>` combinations. (Default: `attrs=img:src`)\n\nTo completely disable tag-attribute processing (for instance, if you're handling image loading on the client side) you can pass in `attrs=false`.\n\n## Usage\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n## Examples\n\nWith this configuration:\n\n``` javascript\n{\n\tmodule: { loaders: [\n\t\t{ test: /\\.jpg$/, loader: \"file-loader\" },\n\t\t{ test: /\\.png$/, loader: \"url-loader?mimetype=image/png\" }\n\t]},\n\toutput: {\n\t\tpublicPath: \"http://cdn.example.com/[hash]/\"\n\t}\n}\n```\n\n``` html\n<!-- fileA.html -->\n<img  src=\"image.jpg\"  data-src=\"image2x.png\" >\n```\n\n``` javascript\nrequire(\"html!./fileA.html\");\n// => '<img  src=\"http://cdn.example.com/49e...ba9f/a9f...92ca.jpg\"  data-src=\"image2x.png\" >'\n\nrequire(\"html?attrs=img:data-src!./file.html\");\n// => '<img  src=\"image.png\"  data-src=\"data:image/png;base64,...\" >'\n\nrequire(\"html?attrs=img:src img:data-src!./file.html\");\nrequire(\"html?attrs[]=img:src&attrs[]=img:data-src!./file.html\");\n// => '<img  src=\"http://cdn.example.com/49e...ba9f/a9f...92ca.jpg\"  data-src=\"data:image/png;base64,...\" >'\n\nrequire(\"html?-attrs!./file.html\");\n// => '<img  src=\"image.jpg\"  data-src=\"image2x.png\" >'\n\n/// minimized by running `webpack --optimize-minimize`\n// => '<img src=http://cdn.example.com/49e...ba9f/a9f...92ca.jpg data-src=data:image/png;base64,...>'\n\n```\n\n## 'Root-relative' urls\n\nFor urls that start with a `/`, the default behavior is to not translate them.\nIf a `root` query parameter is set, however, it will be prepended to the url\nand then translated.\n\nWith the same configuration above:\n``` html\n<!-- fileB.html -->\n<img src=\"/image.jpg\">\n```\n\n``` javascript\n\nrequire(\"html!./fileB.html\");\n// => '<img  src=\"/image.jpg\">'\n\nrequire(\"html?root=.!./fileB.html\");\n// => '<img  src=\"http://cdn.example.com/49e...ba9f/a9f...92ca.jpg\">'\n\n```\n\n## Interpolation\n\nYou can use `interpolate` flag to enable interpolation syntax for ES6 template strings, like so:\n\n```\nrequire(\"html?interpolate!./file.html\");\n```\n\n```\n<img src=\"${require(`./images/gallery.png`)}\" />\n<div>${require('./partials/gallery.html')}</div>\n```\n\n## Advanced options\n\nIf you need to pass [more advanced options](https://github.com/webpack/html-loader/pull/46), especially those which cannot be stringified, you can also define an `htmlLoader`-property on your `webpack.config.js`:\n\n``` javascript\nmodule.exports = {\n  ...\n  module: {\n    loaders: [\n      {\n        test: /\\.html$/,\n        loader: \"html\"\n      }\n    ]\n  }\n  htmlLoader: {\n  \tignoreCustomFragments: [/\\{\\{.*?}}/]\n  }\n};\n```\n\nIf you need to define two different loader configs, you can also change the config's property name via `html?config=otherHtmlLoaderConfig`:\n\n```javascript\nmodule.exports = {\n  ...\n  module: {\n    loaders: [\n      {\n        test: /\\.html$/,\n        loader: \"html?config=otherHtmlLoaderConfig\"\n      }\n    ]\n  }\n  otherHtmlLoaderConfig: {\n    ...\n  }\n};\n```\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/webpack/html-loader/issues"
  },
  "homepage": "https://github.com/webpack/html-loader",
  "_id": "html-loader@0.4.3",
  "dist": {
    "shasum": "ee11786b04818967cd6c679ca055e38f9d9721e7"
  },
  "_from": "html-loader@^0.4.3",
  "_resolved": "https://registry.npmjs.org/html-loader/-/html-loader-0.4.3.tgz"
}
